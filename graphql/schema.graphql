type Event {
  year: ID!
  url: String!
  sessions(where: SessionWhereInput, orderBy: SessionOrderByInput): [Session!]!
  speakers: [Speaker!]!
}

type Speaker {
  id: ID!
  bio: String!
  name: String!
  photo: String!
  twitter: String
  session: Session!
  websites: [Websites!]!
}

type Websites {
  url: ID!
  title: String!
}

type Session {
  id: ID!
  audio: String
  description: String
  duration: Int
  event: Event!
  order: Int
  slides: String
  slug: String
  speaker: Speaker
  time: String
  title: String!
  video: String
  tags: [String!]!
}

type Query {
  event(year: ID!): Event
  events(
    where: EventsWhereInput
    orderBy: EventsOrderByInput
    live: Boolean
  ): [Event!]!
  session(id: ID, slug: String): Session
  sessions(
    where: SessionWhereInput
    orderBy: SessionOrderByInput
    live: Boolean
  ): [Session!]!
  speaker(id: ID, twitter: String): Speaker
  speakers(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput): [Speaker!]!
  tags: [String]!
}

input SpeakerWhereInput {
  id: String
  twitter: String
}

enum SpeakerOrderByInput {
  name_ASC
  name_DESC
}

input SessionWhereInput {
  year: ID
  id: ID
  slug: String
  tag: String
}

enum SessionOrderByInput {
  order_ASC
  order_DESC
  time_ASC
  time_DESC
}

input EventsWhereInput {
  year: ID
}

enum EventsOrderByInput {
  id_ASC
  id_DESC
  year_ASC
  year_DESC
}
